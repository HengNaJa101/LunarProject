# Local PostgreSQL Configuration
# ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö PostgreSQL ‡∏ó‡∏µ‡πà‡∏ï‡∏¥‡∏î‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á

import psycopg2

# ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Local Database
LOCAL_DB_CONFIG = {
    'host': 'localhost',
    'port': 5432,  # Port ‡∏õ‡∏Å‡∏ï‡∏¥‡∏Ç‡∏≠‡∏á PostgreSQL
    'database': 'thai-hub-local',
    'user': 'thaiHub',
    'password': 'your_password_here'  # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á
}

# ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Remote Database (‡πÄ‡∏î‡∏¥‡∏°)
REMOTE_DB_CONFIG = {
    'host': 'Chainchinjung.3bbddns.com',
    'port': 57721,
    'database': 'thai-hub',
    'user': 'thaiHub',
    'password': 'your_remote_password'
}

def test_local_database():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Local Database"""
    try:
        print("=== Testing Local Database Connection ===")
        conn = psycopg2.connect(**LOCAL_DB_CONFIG)
        cursor = conn.cursor()
        
        # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö query
        cursor.execute("SELECT version();")
        version = cursor.fetchone()
        print(f"‚úÖ Local PostgreSQL Version: {version[0]}")
        
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á
        cursor.execute("""
            SELECT table_name 
            FROM information_schema.tables 
            WHERE table_schema = 'public'
        """)
        tables = cursor.fetchall()
        print(f"üìä Tables in database: {[table[0] for table in tables]}")
        
        cursor.close()
        conn.close()
        print("‚úÖ Local database connection successful!")
        return True
        
    except Exception as e:
        print(f"‚ùå Local database connection failed: {e}")
        return False

def test_remote_database():
    """‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Remote Database"""
    try:
        print("=== Testing Remote Database Connection ===")
        conn = psycopg2.connect(**REMOTE_DB_CONFIG)
        cursor = conn.cursor()
        
        cursor.execute("SELECT version();")
        version = cursor.fetchone()
        print(f"‚úÖ Remote PostgreSQL Version: {version[0]}")
        
        cursor.close()
        conn.close()
        print("‚úÖ Remote database connection successful!")
        return True
        
    except Exception as e:
        print(f"‚ùå Remote database connection failed: {e}")
        return False

if __name__ == "__main__":
    print("üîç Database Connection Test")
    print("=" * 50)
    
    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Local Database
    local_ok = test_local_database()
    print()
    
    # ‡∏ó‡∏î‡∏™‡∏≠‡∏ö Remote Database
    remote_ok = test_remote_database()
    print()
    
    if local_ok:
        print("üéØ ‡πÅ‡∏ô‡∏∞‡∏ô‡∏≥: ‡πÉ‡∏ä‡πâ Local Database ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏£‡πá‡∏ß")
    elif remote_ok:
        print("üåê ‡πÉ‡∏ä‡πâ Remote Database")
    else:
        print("‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ Database ‡πÑ‡∏î‡πâ")